{\rtf1\ansi\ansicpg936\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red71\green137\blue205;\red255\green255\blue255;\red202\green202\blue202;
\red67\green192\blue160;\red141\green212\blue254;\red212\green213\blue154;\red167\green197\blue151;\red183\green111\blue179;
\red202\green202\blue202;\red71\green137\blue205;\red202\green202\blue202;\red212\green213\blue154;\red141\green212\blue254;
\red167\green197\blue151;\red0\green0\blue0;\red204\green204\blue202;\red71\green137\blue205;\red202\green202\blue202;
\red212\green213\blue154;\red67\green192\blue160;\red141\green212\blue254;\red204\green204\blue202;\red72\green139\blue206;
\red203\green203\blue202;\red67\green192\blue160;\red142\green213\blue255;\red88\green137\blue67;\red71\green138\blue206;
\red203\green203\blue202;\red67\green192\blue160;\red141\green213\blue254;\red167\green197\blue151;\red88\green137\blue67;
\red203\green203\blue202;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c33936\c61427\c84130;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c83229\c83229\c83125;
\cssrgb\c30610\c78876\c69022;\cssrgb\c61361\c86489\c99746;\cssrgb\c86261\c86245\c66529;\cssrgb\c71008\c80807\c65805;\cssrgb\c77331\c52624\c75301;
\cssrgb\c83137\c83137\c83137;\cssrgb\c33935\c61426\c84130;\cssrgb\c83229\c83229\c83125;\cssrgb\c86261\c86246\c66530;\cssrgb\c61360\c86490\c99746;
\cssrgb\c71007\c80807\c65804;\cssrgb\c0\c0\c0;\cssrgb\c83591\c83590\c83069;\cssrgb\c33936\c61427\c84130;\cssrgb\c83229\c83229\c83125;
\cssrgb\c86261\c86245\c66529;\cssrgb\c30610\c78876\c69022;\cssrgb\c61361\c86489\c99746;\cssrgb\c83858\c83855\c83020;\cssrgb\c34356\c61927\c84545;
\cssrgb\c83411\c83411\c83099;\cssrgb\c30653\c78980\c69024;\cssrgb\c61729\c86919\c100000;\cssrgb\c41436\c59847\c32956;\cssrgb\c34146\c61677\c84338;
\cssrgb\c83320\c83320\c83112;\cssrgb\c30631\c78928\c69023;\cssrgb\c61545\c86704\c99884;\cssrgb\c71035\c80830\c65726;\cssrgb\c41481\c59899\c33082;
\cssrgb\c83411\c83411\c83099;\cssrgb\c100000\c100000\c99985\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The c++ class DameiSDK which defined in file \'93DameiSDK.h\'94 provide all the APIs would be called by customer program. The class will be found as below:\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 DameiSDK\cf4 \strokec4 \
\{\
\cf2 \strokec2 private:\cf4 \strokec4 \
    \cf2 \strokec2 bool\cf4 \strokec4  \cf6 \strokec6 inited\cf4 \strokec4 ;\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf6 \strokec6 isSameEndian\cf4 \strokec4 ;\
    \cf5 \strokec5 SocketLib\cf4 \strokec4 ::\cf5 \strokec5 ipaddress\cf4 \strokec4  \cf6 \strokec6 ipAddress\cf4 \strokec4 ;\
    \cf5 \strokec5 SocketLib\cf4 \strokec4 ::\cf5 \strokec5 UDPSocket\cf4 \strokec4  *\cf6 \strokec6 udpSocket\cf4 \strokec4 ;\
    \cf5 \strokec5 show_list\cf4 \strokec4  \cf6 \strokec6 showList\cf4 \strokec4 ;\
\cf2 \strokec2 public:\cf4 \strokec4 \
    \cf7 \strokec7 DameiSDK\cf4 \strokec4 ();\
    \cf7 \strokec7 ~DameiSDK\cf4 \strokec4 ();\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 Init\cf4 \strokec4 (\cf2 \strokec2 char\cf4 \strokec4  \cf6 \strokec6 ip\cf4 \strokec4 [\cf8 \strokec8 4\cf4 \strokec4 ]);\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 GetShowList\cf4 \strokec4 (\cf5 \strokec5 show_list\cf4 \strokec4  \cf2 \strokec2 &\cf6 \strokec6 sList\cf4 \strokec4 );\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 IsSameEndian\cf4 \strokec4 (\cf2 \strokec2 void\cf4 \strokec4 )\{\cf9 \strokec9 return\cf4 \strokec4  \cf6 \strokec6 isSameEndian\cf4 \strokec4 ;\};\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 GetShowInfo\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 showIndex\cf4 \strokec4 , \cf5 \strokec5 show_info\cf4 \strokec4  \cf2 \strokec2 &\cf6 \strokec6 showInfo\cf4 \strokec4 );\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 SendDmxToShow\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 showIndex\cf4 \strokec4 , \cf2 \strokec2 char\cf4 \strokec4  \cf6 \strokec6 data\cf4 \strokec4 []);\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 GetShowOptimizerSetting\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 showIndex\cf4 \strokec4 , \cf5 \strokec5 show_optimizer_setting\cf4 \strokec4  \cf2 \strokec2 &\cf6 \strokec6 setting\cf4 \strokec4 );\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 SetShowOptimizerSetting\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 showIndex\cf4 \strokec4 , \cf5 \strokec5 show_optimizer_setting\cf4 \strokec4  \cf2 \strokec2 &\cf6 \strokec6 setting\cf4 \strokec4 );\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 SendPointsToShow\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 showIndex\cf4 \strokec4 , \cf5 \strokec5 frame_buffer\cf4 \strokec4  \cf2 \strokec2 &\cf6 \strokec6 frameBuffer\cf4 \strokec4 );\
    \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 SetShowExternMode\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 showIndex\cf4 \strokec4 , \cf2 \strokec2 bool\cf4 \strokec4  \cf6 \strokec6 externMode\cf4 \strokec4 );\
\};\
\cf10 \cb1 \strokec10 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
Here are the detailed descriptions of each APIs.\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf11 \cb3 \expnd0\expndtw0\kerning0
bool\cf12  \cf13 Init\cf12 (\cf11 char\cf12  \cf14 ip\cf12 [\cf15 4\cf12 ])\
\
\cf16 Function: init the SDK class, and open a UDP port.\
Parameters:\
	char ip[4] : [in] the IP address of the Truwave software is using, can be found in Truwave software GUI in \'93Preview\'94 page of the main window, followed after lable \'93Local Host:\'94 in the bottom of the page. The format of the parameter should be four unsigned number, for example: \{192,168,1,100\}\
Return: a bool value to indicate the result of the UDP port creation.\
\
\pard\pardeftab720\partightenfactor0
\cf18 bool\cf19  \cf20 GetShowList\cf19 (\cf21 show_list\cf19  \cf18 &\cf22 sList\cf19 )\cf16 \
\
Function: to get all the show list from the Truwave software. This API should always be the first one need to be called right after Init is done.\
Parameters:\
	show_list &sList : [out] the list of all the shows if function executed successfully. The structure of the show_list as below:\
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 \strokec24 struct\strokec25  \strokec26 show_list\strokec25 \{\
    \strokec26 u8\strokec25  \strokec27 count\strokec25 ;\strokec28 //the total active show number from the \outl0\strokewidth0 Truwave\outl0\strokewidth0 \strokec28  software\strokec25 \
    \strokec26 u8\strokec25  \strokec27 endian\strokec25 ;\strokec28 //0:little endian, 1:big endia\strokec25 \
    \strokec26 u8\strokec25  \strokec27 reserve2\strokec25 ;\strokec28 //no function\strokec25 \
    \strokec26 u8\strokec25  \strokec27 reserve3\strokec25 ;\strokec28 //no function\strokec25 \
    \strokec24 short\strokec25  \strokec27 udpPort\strokec25 [\strokec24 MAX_SHOW_INDEX\strokec25 ];\strokec28 //the udp port which will be used to send ilda frame to the show\strokec25 \
\};\
Return: a bool value to indicate the operation result.\
\
\pard\pardeftab720\partightenfactor0
\cf18 \outl0\strokewidth0 bool\cf19  \cf20 IsSameEndian\cf19 (\cf18 void\cf19 )\
\cf16 \outl0\strokewidth0 \strokec25 \
\pard\pardeftab720\partightenfactor0
\cf16 Function: to get to know if the data endian of local machine and the machine which \outl0\strokewidth0 Truwave\outl0\strokewidth0 \strokec25  is running are same or not.\
Parameters: None\
Return: the data endian comparing result.\
\
\pard\pardeftab720\partightenfactor0
\cf18 \outl0\strokewidth0 bool\cf19  \cf20 GetShowInfo\cf19 (\cf18 int\cf19  \cf22 showIndex\cf19 , \cf21 show_info\cf19  \cf18 &\cf22 showInfo\cf19 )\
\cf16 \outl0\strokewidth0 \strokec25 \
\pard\pardeftab720\partightenfactor0
\cf16 Function: to get the detailed information of a show.\
Parameters:\
	int showIndex: [in] the index of the show which caller want to get the detailed information.\
	show_info &showInfo: [out] the detailed information of show <showIndex> returned from the \outl0\strokewidth0 Truwave\outl0\strokewidth0 \strokec25  software. The structure of the show_info and dac_info as below:\
\strokec29 struct\strokec30  \strokec31 dac_info\strokec30 \{\
    \strokec31 u8\strokec30  \strokec32 version\strokec30 [\strokec33 2\strokec30 ];\strokec34 //version number of the firmware in ShowBridge or ShowTower\strokec30 \
    \strokec31 u8\strokec30  \strokec32 type\strokec30 ;\strokec34 //type number of the ShowBridge or SHowTower\strokec30 \
    \strokec31 u8\strokec30  \strokec32 channel\strokec30 ;\strokec34 //channel number of the ShowBridge\strokec30 \
    \strokec31 u8\strokec30  \strokec32 sn\strokec30 [\strokec33 4\strokec30 ];\strokec34 //sn number of the ShowBridge or ShowTower\strokec30 \
    \strokec31 u8\strokec30  \strokec32 status\strokec30 [\strokec33 8\strokec30 ];\strokec34 //some status of the ShowBrige or ShowTower, status[0] indicate the DAC is online or not, status[1] indicate the working mode of the parent show\strokec30 \
\};\
\
\strokec29 struct\strokec30  \strokec31 show_info\strokec30 \{\
    \strokec29 short\strokec30  \strokec32 showId\strokec30 ;\strokec34 //show ID, most of the time, is the same as show index\strokec30 \
    \strokec29 short\strokec30  \strokec32 udpPort\strokec30 ;\strokec34 //the UDP port which will be used to receive ilda frame from remote controller\strokec30 \
    \strokec31 dac_info\strokec30  \strokec32 cannerInfo\strokec30 ;\strokec34 //the information of the projector(ShowBridge or ShowTower), status[1] included is used to return the working mode\strokec30 \
    \strokec29 char\strokec30  \strokec32 showName\strokec30 [\strokec29 MAX_SHOW_NAME_LEN\strokec30 ];\strokec34 //show name, which can be changed in Truware software\strokec30 \
\};\strokec25 \
Return: \outl0\strokewidth0 a bool value to indicate the operation result.\
\
\pard\pardeftab720\partightenfactor0
\cf18 bool\cf19  \cf20 SendDmxToShow\cf19 (\cf18 int\cf19  \cf22 showIndex\cf19 , \cf18 char\cf19  \cf22 data\cf19 [])\cf16 \
\pard\pardeftab720\partightenfactor0
\cf16 \
Function: to send a DMX frame to a show, use this function to control a show\'92s behavior just like a DMX controller. For example, this API can control a show to display ILDA clips included in Truwave software together with some effect such as \'93Zoom\'94, \'93Rotate\'94, and so on. \
Parameters: \
	short showIndex: [in] the index of the show which caller want to send dmx data to.\
	char data[]: [in] the DMX channel data will be send to the show. The detailed DMX channel definition, please refer to the user guide of the Truwave software.\
\pard\pardeftab720\partightenfactor0
\cf16 Return: a bool value to indicate the operation result.\
\
\cf18 bool\cf19  \cf20 GetShowOptimizerSetting\cf19 (\cf18 int\cf19  \cf22 showIndex\cf19 , \cf21 show_optimizer_setting\cf19  \cf18 &\cf22 setting\cf19 )\cf16 \
\
Function: to get the setting of the ILDA frame optimizer of a show.\
Parameter:\
	int showIndex: [in] the index of the show which caller want to get optimizer setting from.\
	show_optimizer_setting &setting: [out] the optimizer setting returned from Truwave software. The structure of show_optimizer_setting as below:\
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 \strokec29 struct\strokec30  \strokec31 show_optimizer_setting\strokec30 \{\
    \strokec31 u8\strokec30  \strokec32 anchor_points_lit\strokec30 ;\strokec34 //the number of the points need to be added when find a light anchor point \strokec30 \
    \strokec31 u8\strokec30  \strokec32 anchor_points_blanked\strokec30 ;\strokec34 //the number of the points need to be added when find a dark anchor point\strokec30 \
    \strokec31 u8\strokec30  \strokec32 interp_distance_lit\strokec30 ;\strokec34 //the max distance between two light points, 2 means 0.02, and the distance of the view port from -1.0 to 1.0\strokec30 \
    \strokec31 u8\strokec30  \strokec32 interp_distance_blanked\strokec30 ;\strokec34 //the max distance between tow blank points, 2 means 0.02, and the distance of the view port from -1.0 to 1.0\strokec30 \
\};\
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 Return: a bool value to indicate the operation result.\
\
\pard\pardeftab720\partightenfactor0
\cf18 bool\cf19  \cf20 SetShowOptimizerSetting\cf19 (\cf18 int\cf19  \cf22 showIndex\cf19 , \cf21 show_optimizer_setting\cf19  \cf18 &\cf22 setting\cf19 )\cf16 \
\
Function: to set the setting of the ILDA frame optimizer of a show.\
Parameter:\
	int showIndex: [in] the index of the show which caller want to get optimizer setting from.\
	show_optimizer_setting &setting: [in] the optimizer setting returned from Truwave software. The structure of show_optimizer_setting is the same as API GetShowOptimizerSetting.\
Return: a bool value to indicate the operation result.\
\
\cf18 bool\cf19  \cf20 SendPointsToShow\cf19 (\cf18 int\cf19  \cf22 showIndex\cf19 , \cf21 frame_buffer\cf19  \cf18 &\cf22 frameBuffer\cf19 )\cf16 \
\
Function: to send a ILDA frame to a show.\
Parameters:\
	short showIndex: [in] the index of the show which caller want to send dmx data to.\
	frame_buffer &frameBuffer: [out] the ILDA frame data will be send to the show. The structure of frame_buffer as below:\
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 \strokec29 struct\strokec30  \strokec31 point_buffer\strokec30  \{\
    \strokec29 float\strokec30  \strokec32 x\strokec30 ;\strokec34 //the x coordinate of the point, value from -1.0 to 1.0\strokec30 \
    \strokec29 float\strokec30  \strokec32 y\strokec30 ;\strokec34 //the y coordinate of the point, value from -1.0 to 1.0\strokec30 \
    \strokec31 u8\strokec30  \strokec32 blanking\strokec30 ;\strokec34 //0: a dark point, 1: a light point with color\strokec30 \
    \strokec31 u8\strokec30  \strokec32 r\strokec30 ;\strokec34 //red color of the point\strokec30 \
    \strokec31 u8\strokec30  \strokec32 g\strokec30 ;\strokec34 //green color of the point\strokec30 \
    \strokec31 u8\strokec30  \strokec32 b\strokec30 ;\strokec34 //blue color of the point\strokec30 \
\};\
\
\strokec29 struct\strokec30  \strokec31 frame_buffer\strokec30  \{\
    \strokec29 short\strokec30  \strokec32 count\strokec30 ;\strokec34 //total points number in the frame, most of the case, should be less than 1000\strokec30 \
    \strokec31 u8\strokec30  \strokec32 status\strokec30 ;\strokec34 //should be always 0\strokec30 \
    \strokec31 u8\strokec30  \strokec32 delay\strokec30 ;\strokec34 //should be always o\strokec30 \
    \strokec31 point_buffer\strokec30  \strokec32 points\strokec30 [\strokec29 MAX_POINT_COUNT_BIG\strokec30 ];\strokec34 //the value of the points\strokec30 \
\};\
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 Return: a bool value to indicate the operation result.\outl0\strokewidth0 \strokec30 \
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 Note: before use this function to send ILDA frame to a show, please make sure that the show is working in mode 3, caller can use \cf20 GetShowInfo \cf16 \cb36 to get the detailed status of the show, \cb3 \outl0\strokewidth0 \strokec32 showInfo\strokec30 .\strokec32 cannerInfo\strokec30 .\strokec32 status\strokec30 [\strokec33 1\strokec30 ] indicate the working mode. Caller can also use \cf20 \outl0\strokewidth0 SetShowExternMode \cf16 \cb36 force a show into extern mode(mode 3).\cb3 \outl0\strokewidth0 \strokec30 \
\outl0\strokewidth0 \
\cf18 bool\cf19  \cf20 SetShowExternMode\cf19 (\cf18 int\cf19  \cf22 showIndex\cf19 , \cf18 bool\cf19  \cf22 externMode\cf19 )\cf16 \
\
Function: to force a show into extern mode(mode 3) or back to normal mode(mode 0). In mode 3, show will receive ILDA frame from UDP port, in mode 0, show will use the ILDA frame included in the database of Truwave software, then SDK user can use DMX data to control the show.\
Parameters:\
	short showIndex: [in] the index of the show which caller want to send dmx data to.\
	bool exterMode: [in] if true, force the show into mode 3, if false, force the show back to mode 0.\
Return: a bool value to indicate the operation result.\
\
}